[{"uri":"https://visualcomputing-2022-ii.github.io/shaders/color/","title":"Color","tags":[],"description":"Implementaciones de color blending.","content":"\u0026ldquo;Blend mode\u0026rdquo; en la edición de imágenes digitales y los gráficos por computadora se utilizan para determinar cómo se fusionan dos capas entre sí. El modo de fusión predeterminado en la mayoría de las aplicaciones es simplemente oscurecer la capa inferior cubriéndola con lo que esté presente en la capa superior; Debido a que cada píxel tiene valores numéricos, también hay muchas otras formas de combinar dos capas.\nLa mayoría de los programas de edición de gráficos , como Adobe Photoshop y GIMP , permiten a los usuarios modificar los modos de fusión básicos, por ejemplo, aplicando diferentes niveles de opacidad a la \u0026ldquo;capa\u0026rdquo; superior. La \u0026ldquo;capa\u0026rdquo; superior no es necesariamente una capa en la aplicación; se puede aplicar con una herramienta de pintura o edición. La \u0026ldquo;capa\u0026rdquo; superior también se denomina \u0026ldquo;capa de mezcla\u0026rdquo; y \u0026ldquo;capa activa\u0026rdquo;.\nEn las fórmulas que se muestran en esta página, los valores van de 0,0 (negro) a 1,0 (blanco).\nBlend Multiply \u0026ldquo;Multiply blend\u0026rdquo; toma los valores del canal RGBA de 0 a 1 de cada píxel en la capa superior y los multiplica con los valores del píxel correspondiente de la capa inferior. Donde quiera que cualquiera de las capas fuera más brillante que el negro, el compuesto es más oscuro; como cada valor es menor que 1, su producto será menor que cada valor inicial que fue mayor que cero.\n$ f (a, b) = ab $, donde $a$ es el valor de la capa base y $b$ es el valor de la capa superior.\nEste modo es conmutativo : intercambiar dos capas no cambia el resultado. Si las dos capas contienen la misma imagen, el modo de mezcla múltiple es equivalente a una curva cuadrática o corrección gamma con $\\gamma=2$. Para la edición de imágenes, a veces es más conveniente simplemente ir al cuadro de diálogo Curvas del software, porque brinda más flexibilidad en la forma de las curvas. O se puede usar el cuadro de diálogo Niveles: el número del medio suele ser $1/\\gamma$, por lo que se puede escribir simplemente $0,5$.\nSi una capa contiene un color homogéneo, como el color gris (0,8, 0,8, 0,8), el modo de fusión múltiple equivale a una curva que es simplemente una línea recta. Esto también es equivalente a usar este valor de gris como opacidad cuando se mezcla el \u0026ldquo;modo normal\u0026rdquo; con una capa inferior negra. Blend Multiply with brightness En este modo tambien se realiza una multiplicación de colores, pero se agrega un factor mas a la multiplicación que es el valor del brillo representado por un slider entre 0 y 1.\n"},{"uri":"https://visualcomputing-2022-ii.github.io/spaces-perspective/planetakaio/","title":"Planeta Kaio","tags":[],"description":"Implementación de un escenario tridimensional con temática del Planeta Kaio de Dragon Ball. Se usan conceptos de espacios, cámara, perspectiva y texturas.","content":" Coordenadas Esféricas Este tipo de coordenadas están basadas en el sistema de coordenadas polares, el cuál recordemos es bidimensional y consta de un ángulo y el valor del radio. Para nuestro caso aumentaremos a 3 tres dimensiones agregando un ángulo adicional.\nDe Cristian Quinzacara - Trabajo propio, CC BY-SA 4.0, https://commons.wikimedia.org/w/index.php?curid=122972075\nLíneas y superficies coordenadas\nDebido a que nuestro interés es recorrer un planeta de manera lineal como lo haría un auto, podemos servirnos de las líneas coordenadas, las cuales obtenemos variando una de las coordenadas y manteniendo fijas las otras dos:\nLíneas coordenadas r: Semirrectas radiales partiendo del origen de coordenadas. Líneas coordenadas θ: Semicírculos verticales (meridianos). Líneas coordenadas φ: Circunferencias horizontales (paralelos). Para este caso se mantiene fijo el r y varían los otros dos ángulos.\nDe Lyudmil Antonov Lantonov - Este gráfico vectorial, sin especificar según el W3C, fue creado con Inkscape., CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=2229816\nTexturas\nPara las texturas del planeta, el ambiente, las construcciones, árboles, etc. Utilizamos imágenes respectivamente y las librerias de P5 texture(), textureMode() y textureWrap() para cargar estas imágenes a los diferentes elementos mencionados.\nCaso especial auto modelado\nDe manera distinta se realizó el proceso de desarrollo del carrito, para el cuál no sólo se carga la textura sino también se realiza la carga de un modelo en 3D para darle forma especial a este objeto, para ello una vez tenemos el archivo .obj contenedor de nuestro modelo, usamos la librería de P5 loadModel() y model() para carga y visualización respectivamente.\nImplementación Planeta Kaio Movimiento del carro: WASD. Cámara del carro: Flechas Izq. y Der..\n"},{"uri":"https://visualcomputing-2022-ii.github.io/visual-illusions/","title":"Visual Illusions","tags":[],"description":"Workshops de las semanas 3 y 4 sobre las temáticas de Ilusiones Ópticas y Masking; particularmente, lo relacionado con kernel de imagen, histogramas de imagen y herramientas de iluminación.","content":"Chapter 1 Visual Illusions Workshops de las semanas 3 y 4 sobre las temáticas de Ilusiones Ópticas y Masking; particularmente, kernel de imagen, histogramas de imagen y herramientas de iluminación.\n"},{"uri":"https://visualcomputing-2022-ii.github.io/visual-illusions/visual-phenomena/","title":"Visual Phenomena &amp; Optical Illusions","tags":[],"description":"Ilusiones ópticas y fenómenos visuales.","content":" Workshop\nStudy, implement and discuss possible applications of some known visual phenomena and optical illusions.\nIlusiones Ópticas Las ilusiones ópticas podrían definirse como una distorsión de la realidad, producto de un engaño percibido por nuestro sistema visual, desde los ojos hasta el cerebro.\nSe conoce que este último no cuenta con tal nivel de procesamiento necesario para darle manejo a toda la información que se recibe a través de la vista, razón por la cuál el tomar un atajo es preciso para el cerebro, generando por ejemplo las predicciones e interpretaciones que parezcan más lógicas.\nLa Pared de la Cafetería ¿Las líneas en la siguiente imagen son diagonales? El contraste y la disposición de los cuadros te harán creer que cada cuadro parezca más ancho en uno de los extremos, pero ¿Qué pasará si removemos los cuadros? (Ver más)\nEl Vestido Más que una ilusión, comprobamos que al iluminar con color azúl en el dorado y viceversa tenemos el mismo resultado.\nMovimiento a Pasos Al tener el primer rectángulo una luminosidad muy parecida a la de las rayas blancas del fondo, la mitad del tiempo no nos llega información de movimiento al cerebro. Lo mismo ocurre con el objeto más oscuro y las rayas negras pero a intervalos opuestos, creando la sensación de alternancia.\nAdemás, la información del borde de cada objeto móvil se encuentra únicamente en el color, y la corteza visual no puede detectar el principio y el final de cada rectángulo al mismo tiempo en ningún instante dado. (Ver más)\nIlusión de Orbison La ilusión consiste en una figura bidimensional (En este caso un cuadrado) superpuesta sobre un fondo de líneas radiales. El resultado es una ilusión óptica en la que tanto la figura como el rectángulo que la contiene aparecen distorsionados; en particular, los cuadrados aparecen ligeramente abultados. (Ver más)\nTriángulo de Kanizsa Esta ilusión es evoca la percepción de un borde ilusorio, que aparece sin la necesidad de un cambio de luminancia o color. (Ver más)\nIlusión de Ponzo ¿La línea superior es más larga o más corta que la inferior? En este ejemplo, un objeto más lejano tendría que ser más largo que uno más cercano para que ambos produzcan imágenes de retina del mismo tamaño, esto debido a que nuestro cerebro identifica las líneas diagonales de los lados convergentes como la profundidad que requiere para interpretar el mundo tridimensional. (Ver más)\n"},{"uri":"https://visualcomputing-2022-ii.github.io/visual-illusions/masking/","title":"Masking","tags":[],"description":"Kernels, convoluciones e histogramas de imagen.","content":" Workshop\nImplement an image processing web app supporting different image kernels and supporting:\n- Image histogram visualization.\n- Different lightness (coloring brightness) tools.\nKernel y Convoluciones Un kernel, una matriz de convolución o una máscara es una matriz pequeña que se utiliza para desenfocar, agudizar, grabar, detectar bordes y más. Esto se logra haciendo una convolución entre el kernel y una imagen. (Leer más)\n$$ \\left ( \\begin{bmatrix} a \u0026amp; b \u0026amp; c\\\\ d \u0026amp; e \u0026amp; f\\\\ g \u0026amp; h \u0026amp; i \\end{bmatrix} \\ast \\begin{bmatrix} 1 \u0026amp; 2 \u0026amp; 3\\\\ 4 \u0026amp; 5 \u0026amp; 6\\\\ 7 \u0026amp; 8 \u0026amp; 9 \\end{bmatrix} \\right ) \\left [ x,y \\right ] = (i\\cdot 1) + (h\\cdot 2) + (g\\cdot 3) + (f\\cdot 4) + (e\\cdot 5) + (d\\cdot 6) + (c\\cdot 7) + (b\\cdot 8) + (a\\cdot 9) $$\nImplementación La implementación permite construir un kernel arbitrario y visualizar su efecto en la imagen. Algunos kernels de ejemplo son:\n$$ \\textrm{Identidad} = \\begin{bmatrix} 0 \u0026amp; 0 \u0026amp; 0\\\\ 0 \u0026amp; 1 \u0026amp; 0\\\\ 0 \u0026amp; 0 \u0026amp; 0 \\end{bmatrix} \\hspace{1cm} \\textrm{Detección de Bordes} = \\begin{bmatrix} -1 \u0026amp; -1 \u0026amp; -1\\\\ -1 \u0026amp; 8 \u0026amp; -1\\\\ -1 \u0026amp; -1 \u0026amp; -1 \\end{bmatrix} \\hspace{1cm} \\textrm{Enfoque} = \\begin{bmatrix} 0 \u0026amp; -1 \u0026amp; 0\\\\ -1 \u0026amp; 5 \u0026amp; -1\\\\ 0 \u0026amp; -1 \u0026amp; 0 \\end{bmatrix} $$\nPresione a para alternar entre el filtro completo y el filtro focalizado.\nHistogramas Un histograma de imagen es un tipo de histograma que actúa como una representación gráfica de la distribución tonal en una imagen digital. Traza el número de píxeles para cada valor tonal. Permite juzgar la distribución tonal completa de un vistazo. (Leer más)\nImplementación En esta implementación, la imagen está en modo de color HSL; el histograma representa la cantidad de L.\n"},{"uri":"https://visualcomputing-2022-ii.github.io/spaces-perspective/","title":"Spaces &amp; Perspective","tags":[],"description":"Workshops de las semanas 8, 9 y 10 sobre las temáticas de Espacios, Cámaras y Perspectiva. Implementación de un escenario tridimensional con aplicación de estos conceptos y temática del Planeta Kaio de Dragon Ball.","content":"Chapter 2 Spaces \u0026amp; Perspective Workshops de las semanas 8, 9 y 10 sobre las temáticas de Espacios, Cámaras y Perspectiva. Implementación de un escenario tridimensional con aplicación de estos conceptos y temática del Planeta Kaio de Dragon Ball.\n"},{"uri":"https://visualcomputing-2022-ii.github.io/shaders/pixelator/","title":"Pixelator","tags":[],"description":"Implementación de Pixelator por hardware y software.","content":"Coherencia Espacial Por medio del famoso y trascendentalmente misterioso experimento de la doble rendija podemos recordar el concepto de coherencia espacial. Podemos contemplar de manera real y conceptual a la vez el cambio en la coherencia espacial óptica en función del tamaño de la fuente. Específicamente dos ondas luminosas de la misma frecuencia y amplitud, que nos entregan como resultado esta variación de luz en distintos patrones de interferencia.\nJ. P. Sharpe and D. A. Collins - Demonstration of optical spatial coherence using a variable width source, https://aapt.scitation.org/doi/10.1119/1.3549723\nAplicación y Frame Rate Los siguientes ejemplos hacen uso de este concepto de coherencia espacial para reducir la resolución o comprimir diferentes imágenes y video hasta el punto de tener un solo texel. A medida que jugamos con un slider de esta aplicación, podremos realizar una comparación de rendimiento programando con hardware (Shaders) y con software (P5).\nEs importante mencionar que el mecanismo realizado por este algoritmo no está exento del fenómeno de aliasing, para ello requeriríamos un algoritmo de distribución normal de Gauss para promediar los texels resultantes a partir de sus colindantes.\nEl método utilizado a continuación consiste en reducir a submatrices la imágen original según se quiera reducir la resolución, luego se tomará el valor RGB del primer pixel de esta submatriz para darle su valor al cuadro (función rec() de P5) que reemplazará toda la submatriz, lo cuál nos produce el fenómeno de aliasing que podemos analizar a continuación. Ahora nos resta realizar el testeo, poner a prueba el rendimiento de este algoritmo, y analizar lo que cuesta renderizar la imágen desde del hardware y renderizarla pixel por pixel por software, para este último caso podemos observar que tenderá a colapsar el sistema (se reducen los frames por segundo de la función draw) a medida que aumentamos la resolución.\nWith Shaders With Software Image Video "},{"uri":"https://visualcomputing-2022-ii.github.io/shaders/","title":"Shaders","tags":[],"description":"Workshops de las semanas 12 a 15 sobre las temáticas de Shaders. Implementación de los ejercicios propuestos para Coloring, Image Processing y Spatial Coherence.","content":"Chapter 3 Shaders Workshops de las semanas 12 a 15 sobre las temáticas de Shaders. Implementación de los ejercicios propuestos para Coloring y Spatial Coherence.\n"},{"uri":"https://visualcomputing-2022-ii.github.io/shaders/imageprocessing/","title":"","tags":[],"description":"","content":""},{"uri":"https://visualcomputing-2022-ii.github.io/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://visualcomputing-2022-ii.github.io/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://visualcomputing-2022-ii.github.io/","title":"Visual Repo","tags":[],"description":"","content":"Visual Repo Esta página consta de reportes académicos enriquecidos para la asignatura Computación Visual del período académico 2022-II de la Universidad Nacional de Colombia.\nIntegrantes Juan Esteban Alarcón Bravo Juan Sebastián Ruiz Sánchez Isaac Zarate Reyes Hacking Install the gohugo static site generator then:\n$git clone https://github.com/VisualComputing-2022-II/VisualComputing-2022-II.github.io $git submodule update --init --recursive $hugo server -D --disableFastRender Contenido Visual Illusions Workshops de las semanas 3 y 4 sobre las temáticas de Ilusiones Ópticas y Masking; particularmente, lo relacionado con kernel de imagen, histogramas de imagen y herramientas de iluminación.\nVisual Phenomena \u0026amp; Optical Illusions Ilusiones ópticas y fenómenos visuales.\nMasking Kernels, convoluciones e histogramas de imagen.\nSpaces \u0026amp; Perspective Workshops de las semanas 8, 9 y 10 sobre las temáticas de Espacios, Cámaras y Perspectiva. Implementación de un escenario tridimensional con aplicación de estos conceptos y temática del Planeta Kaio de Dragon Ball.\nPlaneta Kaio Implementación de un escenario tridimensional con temática del Planeta Kaio de Dragon Ball. Se usan conceptos de espacios, cámara, perspectiva y texturas.\nShaders Workshops de las semanas 12 a 15 sobre las temáticas de Shaders. Implementación de los ejercicios propuestos para Coloring, Image Processing y Spatial Coherence.\nColor Implementaciones de color blending.\nPixelator Implementación de Pixelator por hardware y software.\n"}]